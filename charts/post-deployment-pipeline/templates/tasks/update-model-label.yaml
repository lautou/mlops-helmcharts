---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-model-metadata
spec:
  params:
    - name: APPLICATION_NAME
      description: Name of the application
      type: string
    - name: VERSION
      description: Version of the application
      type: string
    - name: KFP_RUN_ID
      description: Run ID of the Data Science Pipeline
      type: string
    - name: DEPLOY_ENVIRONMENT
      description: Environment to deploy the app
      type: string
    - name: GIT_COMMIT_AUTHOR
      description: Author of the git commit
  steps:
    - name: update-model-metadata
      image: quay.io/rlundber/mlops-ct-cicd:0.4
      command: ["/bin/sh", "-c"]
      args:
      - |
        python3 -m pip install model-registry=="0.2.10"
        cat << 'EOF' | python3

        from os import environ
        from model_registry import ModelRegistry 

        namespace_file_path =\
          '/var/run/secrets/kubernetes.io/serviceaccount/namespace'
        with open(namespace_file_path, 'r') as namespace_file:
          namespace = namespace_file.read()
        
        environ["KF_PIPELINES_SA_TOKEN_PATH"] = "/var/run/secrets/kubernetes.io/serviceaccount/token"
  
        registry = ModelRegistry(server_address=f"https://{namespace}-registry-rest.{{ .Values.cluster_domain }}", port=443, author="$(params.GIT_COMMIT_AUTHOR)", is_secure=False)

        # Loop through and update the model labels
        for version in registry.get_model_versions("$(params.APPLICATION_NAME)):
          if version.name != "$(params.VERSION)" and "$(params.DEPLOY_ENVIRONMENT)" in version.custom_properties.keys():
              version.custom_properties.pop("$(params.DEPLOY_ENVIRONMENT)")
              version.author = "$(params.GIT_COMMIT_AUTHOR)"
              registry.update(version)
              print(f"Removed label from {$(params.VERSION)}")
          elif version.name == "$(params.VERSION)":
              version.custom_properties["$(params.DEPLOY_ENVIRONMENT)"]=""
              version.author = "$(params.GIT_COMMIT_AUTHOR)"
              registry.update(version)
              print(f"Added label to {$(params.VERSION)}")

        EOF